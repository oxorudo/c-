scanf/printf와 cin/cout의 차이 : https://sunullo319777go.tistory.com/m/41


printf 출력형식 : %d	int값을 부호있는 10진수로 출력
                 i	   d와 같음
                 u	int값을 부호없는 10진수로 출력
                 X	int값을 부호없는 16진수로 출력  10~15은  'A'~'F'로 표시
                 x	int값을 부호없는 16진수로 출력  10~15은  'a'~'f'로 표시
                 o	int값을 부호없는 8진수로 출력
                 p	포인터값을 16진수로 출력
                 s	문자열 출력
                 c	int값을 문자로 출력
                 C	c와 같음
                 f	double값을 소수로 출력 (예：12.566371)
                 e	double값을 지수로 출력 (예：1.256637e+001)
                 E	e와 같음 'e'가 'E'로 표시 (예：1.256637E+001)。
                 g	숫자값의 크기에 따라 f나 e로 출력  (예：12.5664、2.99792e+008)
                    숫자값의 절대치가 너무 커서 precision의 자리수를 넘는 경우와 숫자값의 절대값이 0.0001보다 작은 경우 e형식이 사용되어짐.
                    그 외의 경우는 f형식으로 사용됨
                 G	9와 같음 'e'가 'E'로 표시

cout << fixed;
cout.precision(); : 소숫점 고정

cout.width(); : 칸 수 고정
cout.fill(''); : width의 빈 칸은 괄호 안의 것으로 채움 

cout << std::oct << 변수: 변수를 8진수로 출력
     std::dec   10진수
     std::hex   16진수
     uppercase << hex << 변수 :변수가 16진수 대문자 출력이 필요할 때
     
아스키코드 입력받아 문자출력 : char 변수를 만들어 아스키코드 입력한 후 cout << (char)(변수) 식으로 출력

비트시프트 : 2진수 형태로 저장되어 있는 값들을 왼쪽(<<)이나 오른쪽(>>)으로 지정한 비트 수만큼 밀어주면 2배씩 늘어나거나 반으로 줄어듦
왼쪽 비트시프트(<<) : 오른쪽에 0이 주어진 개수만큼 추가
오른쪽(>>) : 왼쪽에 0(0 또는 양의 정수인 경우)이나 1(음의 정수인 경우)이 개수만큼 추가된다.
범위(비트)를 넘어서 이동되는 비트는 삭제된다.
EX) int a=10;
printf("%d", a<<1); //10을 2배 한 값인 20 이 출력된다.
printf("%d", a>>1); //10을 반으로 나눈 값인 5 가 출력된다.
printf("%d", a<<2); //10을 4배 한 값인 40 이 출력된다.
printf("%d", a>>2); //10을 반으로 나눈 후 다시 반으로 나눈 값인 2 가 출력된다.
비트시프트를 이용한 제곱 : a<<2 : a의 2제곱
                         a<<b : a의 b제곱
